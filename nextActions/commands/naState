#!/usr/bin/python
import csv
import time
import datetime
import ConfigParser
import operator
import io
import os
from naLibSorting import sortTasksCSV
from datetime import datetime


#if there is already a task, update the last time you saw it. and exit
#else 
def checkExists(str):
  print str, "entered checkExists"
  tasklist=sortTasksCSV()
  for task in tasklist:
    if str in task[2]:
      return True
  return False
#What is the age of the oldest task 

def getOldestTask():
	tasklist=sortTasksCSV()
	oldest=tasklist[0]
	dateObject= time.strptime(oldest[3],"%Y-%m-%d (%a) -  %H:%M:%S")
	age = time.mktime(dateObject)
	return age


#what is the time that the last project was archived 

#if one is greater than the other then activate the task

#else, NOop
color="Gold"
global config
def itterateProject(color):
   print color, "entered checkExists"
   config = ConfigParser.RawConfigParser()
   config.read(os.environ['JURGEN']+'Jurgen/nextActions/logs/state.cfg')
   if checkExists('Update Projects: '+color):
     print "goal exists so we update the time" 
     config.set('projects',color+'lastupdate',time.time())
     config.set('projects',color+'lastupdatestring',str(datetime.now()))
     with open(os.environ['JURGEN']+'Jurgen/nextActions/logs/state.cfg', 'wb') as configfile:
   	   config.write(configfile)
   else:
     timeOfLastUpdate= config.getfloat('projects',color+'lastupdate')
 #     print 'last update ', timeOfLastUpdate
 #     print 'oldest task ', getOldestTask()
     if getOldestTask()>timeOfLastUpdate:
	print "creating update projects goal"
   	os.system(os.environ['JURGEN']+"Jurgen/nextActions/commands/naCron \"Update Projects: "+color+"\" 5 t")
     else: 
   	#nothing to see here#
	print "nothing to see here" 
	pass 

itterateProject("Gold")
itterateProject("Red")






